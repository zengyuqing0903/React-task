{"version":3,"sources":["Todolist/Todoinput.js","Todolist/Todoing.js","Todolist/Todolist.js","Context/Context.js","Context/Child.js","Context/Parent.js","Hoc/Hoc.js","Sider.js","NoMatch.js","Router/Content.js","Router/Hook.js","App2.js","index.js"],"names":["Todoinput","handleInput","e","keyCode","props","add","target","value","handleChange","setState","inputValue","bind","state","id","onChange","this","onKeyDown","type","Component","Todoing","changeCheck","idx","checkTrue","changeCheck1","checkFalse","todo","finish","todoLen","finishLen","map","item","key","checked","onClick","del","del1","prototypes","PropTypes","array","func","Todolist","getList","JSON","parse","localStorage","getItem","setList","setItem","stringify","addItem","data","componentDidMount","delItem","splice","delItem1","changeTrue","list1","console","log","list2","push","changeFalse","length","con2","React","createContext","Child","context","contextType","Parent","time","Date","toLocaleString","timeId","setInterval","clearInterval","url","hoc","Com","title","Fetch","fetch","method","then","res","json","result","displayName","name","getDisplayName","Music","a","Music2","author","Mymusic","Mymusic2","Hoc","b","Sider","style","float","activeStyle","background","color","to","pathname","search","NoMatch","Content","page","match","params","prevProps","prevState","width","height","overflow","dangerouslySetInnerHTML","__html","content","Hooks","history","useHistory","useParams","useLocation","useRouteMatch","LoginWithRouter","withRouter","ReactDOM","render","document","getElementById","className"],"mappings":"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","file":"static/js/main.9050645d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nexport default class Todoinput extends Component {\r\n    constructor(){\r\n        super();\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.state = {\r\n            inputValue:''\r\n        } \r\n    }\r\n    handleInput = (e)=>{\r\n        if(e.keyCode === 13){\r\n            this.props.add(e.target.value);\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            inputValue: e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label>ToDoList：</label>\r\n                <input id=\"inp\" onChange={this.handleChange} value={this.state.inputValue} onKeyDown={this.handleInput} type=\"text\"/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport default class Todoing extends Component {\r\n    changeCheck=(e,idx)=>{\r\n        this.props.checkTrue(idx);\r\n    }\r\n    changeCheck1=(e,idx)=>{\r\n        this.props.checkFalse(idx);\r\n    }\r\n    render() {\r\n        var {todo,finish,todoLen,finishLen} = this.props;\r\n        return (\r\n            <div>\r\n                <h2>{\"正在进行：\"}</h2>\r\n                <p>{\"代办：\"}{todoLen}</p>\r\n                <ul>\r\n                    {\r\n                        todo.map((item,idx)=>\r\n                            <li key={idx}>\r\n                                <input type='checkbox' checked={false} onChange={(e)=>this.changeCheck(e,idx)}/>\r\n                                {item}---<button onClick={(e)=>this.props.del(idx,e)}>删除</button>\r\n                            </li>\r\n                        )   \r\n                    }\r\n                </ul>\r\n                <h2>{\"已经完成：\"}</h2>\r\n                <p>{\"完成：\"}{finishLen}</p>\r\n                <ul>\r\n                    {\r\n                        finish.map((item,idx)=>\r\n                            <li key={idx}>\r\n                                <input type='checkbox'checked={true} onChange={(e)=>this.changeCheck1(e,idx)}/>\r\n                                {item}---<button onClick={(e)=>this.props.del1(idx,e)} >删除</button>\r\n                            </li>\r\n                        )   \r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nTodoing.prototypes = {\r\n    todo: PropTypes.array,\r\n    del : PropTypes.func\r\n}","import React, { Component } from 'react'\r\nimport Todoinput from './Todoinput.js'\r\nimport Todoing from './Todoing.js'\r\nexport default class Todolist extends Component {\r\n    constructor(){\r\n        super();\r\n        if(localStorage.getItem('todo') == null){\r\n            let list = [];\r\n            var todoLen =0;\r\n            localStorage.setItem('todo',JSON.stringify(list));\r\n        }else{\r\n            todoLen = localStorage.getItem('todo').length;\r\n        }\r\n        if(localStorage.getItem('finish') == null){\r\n            let list = [];\r\n            var finishLen =0;\r\n            localStorage.setItem('finish',JSON.stringify(list));\r\n        }else{\r\n            finishLen = localStorage.getItem('finish').length;\r\n        }\r\n        this.state = {\r\n            todo:JSON.parse(localStorage.getItem(\"todo\")),\r\n            finish:JSON.parse(localStorage.getItem(\"finish\")),\r\n            todoLen:todoLen,\r\n            finishLen:finishLen\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        let todo = JSON.parse(localStorage.getItem(\"todo\"));\r\n        // console.log([...this.state.todo]);\r\n        let finish = JSON.parse(localStorage.getItem(\"finish\"));\r\n        // console.log(finish.length);\r\n        this.setState({\r\n            todoLen:todo.length,\r\n            finishLen:finish.length\r\n        })\r\n    }\r\n    // 获得localStorage中的数据（value）\r\n    getList = (key)=>{\r\n        return JSON.parse(localStorage.getItem(key))\r\n    }\r\n    // 向localStorage中添加数据（value）\r\n    setList = (key,item)=>{\r\n        return localStorage.setItem(key,JSON.stringify(item))\r\n    }\r\n    // 数据添加\r\n    addItem = (data)=>{\r\n        this.setState({\r\n            todo:[...this.state.todo,data]\r\n        },()=>{\r\n            this.setList(\"todo\",this.state.todo);\r\n            this.componentDidMount();\r\n        })\r\n    }\r\n    // 删除正在进行的数据\r\n    delItem = (idx,e)=>{\r\n        let todo = this.getList(\"todo\");\r\n        todo.splice(idx,1);\r\n        this.setState({\r\n            todo:todo\r\n        })\r\n        this.setList(\"todo\",todo);\r\n        this.componentDidMount();\r\n    }\r\n    // 删除已经完成的数据\r\n    delItem1 = (idx,e)=>{\r\n        let finish = this.getList(\"finish\");\r\n        finish.splice(idx,1);\r\n        this.setState({\r\n            finish:finish\r\n        })\r\n        this.setList(\"finish\",finish);\r\n        this.componentDidMount();\r\n    }\r\n    // 将false变为true\r\n    changeTrue=(idx)=>{\r\n        let list1 = this.getList(\"todo\");\r\n        console.log(list1);\r\n        let list2 = this.getList(\"finish\");\r\n        var data = list1[idx];\r\n        list2.push(data);\r\n        list1.splice(idx,1);\r\n        this.setState({\r\n            todo:list1,\r\n            finish:list2\r\n        })\r\n        this.setList(\"todo\",list1);\r\n        this.setList(\"finish\",list2);\r\n        this.componentDidMount();\r\n    }\r\n    // 将true变为false\r\n    changeFalse=(idx)=>{;\r\n        let list1 = this.getList(\"todo\");\r\n        let list2 = this.getList(\"finish\");\r\n        var data = list2[idx];\r\n        list1.push(data);\r\n        list2.splice(idx,1);\r\n        this.setState({\r\n            todo:list1,\r\n            finish:list2\r\n        })\r\n        this.setList(\"todo\",list1);\r\n        this.setList(\"finish\",list2);\r\n        this.componentDidMount();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Todoinput add={this.addItem}/>\r\n                <Todoing del={this.delItem} del1={this.delItem1} todo={this.state.todo} finish={this.state.finish}\r\n                    checkTrue={this.changeTrue} checkFalse={this.changeFalse} todoLen={this.state.todoLen}\r\n                    finishLen={this.state.finishLen}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n// export let {Provider,Consumer} = React.createContext();\r\nexport let con = React.createContext(); //con:==>{Provider,Consumer} ->对象\r\nexport let con2 = React.createContext();","import React, { Component } from 'react'\r\nimport {con2} from \"./Context\";//命名导出在引入时要加{}\r\nexport default class Child extends Component {\r\n    render() {\r\n        console.log(this.context);\r\n        return (\r\n            <div>\r\n                Child组件\r\n                <div>{this.context}</div>\r\n                {/* <con.Consumer>\r\n                    {\r\n                        (id)=><div>{id}</div>\r\n                    }\r\n                </con.Consumer> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nChild.contextType = con2;","import React, { Component } from 'react'\r\nimport Child from './Child';\r\nexport default class Parent extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            time:new Date().toLocaleString()\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.timeId = setInterval(()=>{\r\n            console.log(111);\r\n            this.setState({\r\n                time: new Date().toLocaleString()\r\n            })\r\n        },1000)\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.timeId)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.state.time}</h1>\r\n                Parent组件\r\n                <Child/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nlet url = \"https://api.apiopen.top/musicRankingsDetails?type=1\";\r\nfunction getDisplayName(Com){\r\n    return Com.displayName || Com.name || 'Component';\r\n}\r\nfunction hoc(Com,url,title){\r\n    class Fetch extends Component{\r\n        constructor(){\r\n            super();\r\n            this.state = {\r\n                data: []\r\n            }\r\n        }\r\n        componentDidMount() {\r\n            fetch(url,{method:'post'})\r\n                .then((res)=>res.json())\r\n                .then((res)=>{\r\n                    console.log(res);\r\n                    this.setState({\r\n                        data:res.result\r\n                    })\r\n                })\r\n        }\r\n        render(){\r\n            return (<div>\r\n                    <p>{title}</p>\r\n                    <Com {...this.props} data={this.state.data}/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    Fetch.displayName = `Fetch(${getDisplayName(Com)})`;\r\n    return Fetch;\r\n}\r\nclass Music extends Component{\r\n    render(){\r\n        return (\r\n            <ul>\r\n                <h1>{this.props.a}</h1>\r\n                {\r\n                    this.props.data.map(\r\n                        (item,idx)=><li key={idx}>{item.title}</li>\r\n                    )\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n}\r\nclass Music2 extends Component{\r\n    render(){\r\n        return (\r\n            <ul>\r\n                {\r\n                    this.props.data.map(\r\n                        (item,idx)=>\r\n                            <li key={idx}>\r\n                                <p>{item.title}</p>\r\n                                <p>{item.author}</p>\r\n                            </li>   \r\n                    )\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n}\r\nlet Mymusic = hoc(Music,url,'音乐');\r\nlet Mymusic2 = hoc(Music2,url,'新闻');\r\n\r\nexport default class Hoc extends Component {\r\n\r\n    render() {\r\n        console.log(this);\r\n        return (\r\n            <div>\r\n                <Mymusic a='aa' b='bb'/>\r\n                <Mymusic2/>\r\n                <Mymusic2/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Button} from 'antd';\r\nexport default class Sider extends Component {\r\n    render() { \r\n        let style = {float:\"left\"}\r\n        return (\r\n            <ul style={style}>\r\n                <Button type=\"primary\">按钮</Button>\r\n                <li>\r\n                    {/* <Link to='/hoc'>Hoc</Link> */}\r\n                    {/* 2019-10-21 */}\r\n                    <NavLink activeStyle={{background:'orange',color:'#fff'}} to={\r\n                        {pathname:'/hoc',state:{id:100},search:'?user=zhangsan'}\r\n                    }>Hoc</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink activeStyle={{background:'orange',color:'#fff'}} to='/parent'>parent</NavLink>\r\n                </li>\r\n                {\r\n                    [0,1,2,3,4,5,6,7].map((item)=>(\r\n                        <li key={item}>\r\n                            <NavLink activeStyle={\r\n                                {background:'orange',\r\n                                color:'#fff'}\r\n                            } to={'/content/'+item}>帖子{item}</NavLink>\r\n                        </li>\r\n                    ))\r\n                }\r\n\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nexport default function NoMatch(props){\r\n    console.log(props);\r\n    return <h1>你的页面飞走了</h1>;\r\n}","import React,{Component,} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n// 无状态组件\r\n// export default function Content(props){\r\n//     console.log(props);\r\n//     function toHoc(){\r\n//         props.history.push('/hoc')\r\n//     }\r\n//     return (\r\n//         <div>\r\n//             {/* {props.children}\r\n//             Content */}\r\n//             {/* {props.match.params.id} */}\r\n//             <button onClick={toHoc}>跳转到HOC组件</button>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nexport default class Content extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            data:[]\r\n        }\r\n\r\n\r\n    }\r\n    // 组件加载后只会执行一次\r\n    componentDidMount() {\r\n        let page = this.props.match.params.id;\r\n        fetch('https://cnodejs.org/api/v1/topics?page='+page)\r\n            .then((res)=>res.json())\r\n            .then((res)=>{\r\n                console.log(res);\r\n                this.setState({\r\n                    data:res.data\r\n                })\r\n            })\r\n    }\r\n    componentDidUpdate(prevProps,prevState){\r\n        if(prevProps.match.params.id !== this.props.match.params.id){\r\n            let page = this.props.match.params.id;\r\n            fetch('https://cnodejs.org/api/v1/topics?page='+page)\r\n                .then((res)=>res.json())\r\n                .then((res)=>{\r\n                    console.log(res);\r\n                    this.setState({\r\n                        data:res.data\r\n                    })\r\n                })\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {\r\n                        this.state.data.map((item)=>(\r\n                            <div style={{width:500,height:200,overflow:'hidden'}} key={item.id}>\r\n                                <h2>{item.title}</h2>\r\n                                <div dangerouslySetInnerHTML={{__html:item.content}}></div>\r\n                            </div>\r\n                        )\r\n\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React,{Component,} from 'react';\r\nimport {useHistory,useLocation,useParams,useRouteMatch} from 'react-router-dom';\r\nexport default function Hooks(){\r\n    let history = useHistory();\r\n    let {id}= useParams();\r\n    console.log(id);\r\n    console.log(useLocation());\r\n    console.log(useRouteMatch());\r\n    function toHoc(){\r\n        history.push('/Hoc');\r\n    }\r\n    return <div>\r\n        <button onClick={toHoc}>跳转到HOC</button>\r\n    </div>\r\n}","import React, { Component } from 'react'\r\nimport {BrowserRouter as Router,withRouter,Route,Switch,Redirect,Link} from 'react-router-dom';\r\n// import {HashRouter as Router,Route,Link} from 'react-router-dom';\r\nimport Parent from './Context/Parent';\r\nimport Hoc from './Hoc/Hoc';\r\nimport Sider from './Sider';\r\nimport NoMatch from './NoMatch';\r\nimport Content from './Router/Content';\r\nimport Hooks from './Router/Hook';\r\n\r\nfunction Login(props){\r\n    console.log(props);\r\n    return <button>登录</button>\r\n}\r\nlet LoginWithRouter = withRouter(Login)\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <Router basename=\"/build\">\r\n                <div>\r\n                    {/* <Content>\r\n                        <h2>这是Children的内容</h2>\r\n                        <ul>\r\n                            <li>1</li>\r\n                        </ul>\r\n                    </Content> */}\r\n                    {/* <Content name=\"zhangsan\"/> */}\r\n                    <LoginWithRouter/>\r\n                    {/* <Login/> */}\r\n                    <Sider/>\r\n                    <div style={\r\n                        {float:'left',\r\n                        border:'2px solid red',\r\n                        marginLeft:100}\r\n                    }>\r\n                        {/* <Route path='/hoc' component={Hoc} /> */}\r\n                        {/* 2019-10-21 */}\r\n                        {/* <Route path='/hoc' render={()=><h1>Render 方法</h1>}/> */}\r\n                    <Switch>\r\n                        <Route exact path='/hoc' component={Hoc}/>\r\n                            {/* exact:严格匹配 path：用来匹配路径*/}\r\n                        {/* <Route exact path='/hoc' component={Hoc}> \r\n                            <Hoc/>\r\n                        </Route> */}\r\n                        <Route path='/parent' component={Parent}/>\r\n                        {/* <Redirect from='/old' to='/hoc'/> */}\r\n                        <Route path='/old' render={(props)=><Redirect to='/hoc'/>}/>\r\n                        <Route  path='/content/:id' component={Content}/>\r\n                        <Route  path='/hooks/:id' component={Hooks}/>\r\n                        <Route>\r\n                            <NoMatch/>\r\n                            {/* 一定要放在最后面，保证先匹配前面写好的路径 */}\r\n                        </Route>\r\n                        {/* <Redirect to='/no'/> */}\r\n                    </Switch>\r\n                    </div>\r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n","import React,{Fragment,Component} from 'react';\n// import {ShowTime} from './Showtime'//命名导出\n// import ShowTime from './Showtime';//默认导出，ShowTime可重命名（即命名任意）\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Todolist from './Todolist/Todolist';\n// import Request from './Request';\n// import Parent from \"./Context/Parent\";\n\n\n//Contxt:\n// 1.生成Context，可写在一个js文件中，export导出\n// 2.在根组件import Provider，并配置Provider，加上value属性\n// 3.在需要获取数据的组件，import Consumer并配置Consumer\n// Consumer组件里是个函数，函数的参数是传过来的value值\n// import {Provider} from \"./Context/Context\";\n// import {con,con2} from \"./Context/Context\";\n// import Hoc from \"./Hoc/Hoc\";\n\n// import ParentPortal from './Portal/ParentPortal'\nimport App from './App2'\nimport { con } from './Context/Context';\n// let id = 1234;\n// ReactDOM.render(\n//     <con.Provider value={id}>\n//         <div>ddd</div>\n//         <con2.Provider value='aaa'>\n//             <Parent/>  \n//         </con2.Provider>\n//     </con.Provider>,\n//     document.getElementById('root'))\n\n\n// ReactDOM.render(<Hoc/>,document.getElementById('root'))\n\n// ReactDOM.render(<ParentPortal/>,document.getElementById('root'))\n\n// ReactDOM.render(<App/>,document.getElementById('root'))\n\n\n\n\n\n\n\n\n// 函数声明组件 \n// function ShowTime(props){\n//     console.log(props);\n//     return (\n//         <Fragment>\n//             <div>{props.name}{props.age}</div>\n//             <div>\n//                 {new Date().toLocaleString()}\n//             </div> \n//         </Fragment>\n//     )\n// }\n\n// var num = [1,2,3,4,5];\n// ReactDOM.render(\n//     <ShowTime age={num} name=\"zhangsan\"/>,\n//     document.getElementById('root')\n// )\n\n// 组件交互\n// 父组件---->子组件：调用子组件时添加属性，子组件通过props拿到传递的数据\n// 子组件---->父组件：\n\nReactDOM.render(<Todolist/>,document.getElementById('root'))//<Todolist/>组件名首字母要大写\n\n\n// ReactDOM.render(<Request/>,document.getElementById('root'))\n\n\n\n// 显示当前系统时间\n// function showTime(){\n//     var ele = <div>{new Date().toLocaleString()}</div>\n//     ReactDOM.render(\n//         ele,\n//         document.querySelector('#root')\n//     );\n// }\n// showTime();\n// setInterval(showTime,1000);\n\n\n\n// react技术栈\n// jsx语法\n// var ele = <h1 class=\"tit\">hello <p>react</p></h1>;//实际上是一个对象，转成下方obj的形式\n// babel编译，返回一个对象\n// var ele = React.createElement(\n//     \"h1\",\n//     {id:\"tit\",class:\"title\"},\n//     'hello',\n//     React.createElement(\n//         \"p\",\n//         {id:\"t\",class:\"tit\"},\n//         'react')\n// );\n// ReactDOM.render(ele, document.getElementById('root'));\n// 自己封装render函数\n\nvar obj = {\n    type:'div',\n    props:{//属性\n        id:'box',\n        class:'box',\n        children:[\n            'hello',\n            'react',\n            {\n                type:'h1',\n                props:{\n                    id:'tit',\n                    class:'tit',\n                    children:[\n                        'hello',\n                        'react',\n                    ]\n                }\n            }\n        ]\n    }\n}\n// 渲染\nfunction render(obj,container){\n    var {type,props} = obj;//解构赋值（ES6）\n    // 文档碎片(?) 相当于虚拟节点\n    var fragment = document.createDocumentFragment();\n    \n    var ele = document.createElement(type);\n    for(var item in props){\n        if(item === 'class'){\n            ele.className = props[item];\n        }else if(item === 'children'){\n            for(var i=0;i<props.children.length;i++){\n                // ele.innerHTML += props.children[i];\n                if(typeof props.children[i] === 'object'){\n                    render(props.children[i],ele);//递归(传的为实参) 如果是对象，就要再执行一遍外层函数\n                }else{\n                    var txt = document.createTextNode(props.children[i]);//创建文本节点\n                    ele.appendChild(txt);    \n                }\n            }\n        }\n        else{\n            ele[item] = props[item];//.的形式是在找对象中的属性名，而[]的形式是可以找到变量\n        }\n    }\n    fragment.appendChild(ele);\n    container.appendChild(fragment);\n}\n// render(obj,document.getElementById('root'))\n\n/**\n * 页面渲染过程：请求HTML页面，浏览器HTML解析器解析html文件、生成DOM树\n * link引入css文件、css解析器解析css，生成css对象模型，CSSOM和DOM tree结合生成一个render tree\n * 最后浏览器绘制页面\n */\n// 页面回流（重排reflow）:DOM结构结构变化、内容变化、大小、位置的变化（代价最大）\n// 页面重绘（repaint）：颜色的变化（背景色，字体颜色，边框颜色）\n/* 1.文档结构发生变化\n    先用变量进行dom处理，最后一次渲染\n*/\n// console.time('time');\n// var div = document.getElementById('root');\n// var str = '';\n// for(var i=0;i<1000;i++){\n//     str += '<p>'+i+'</p>';\n// }\n// div.innerHTML = str;\n// console.timeEnd('time');\n// 2.对于样式处理,声明一个css类(在index.css中)\nvar div = document.getElementById('root');         \n// div.style.width = '100px';\n// div.style.height = '100px';\n// div.style.background = 'green';\n\ndiv.className = 'active';\n// 3.offsetLeft、offsetWidth等都会引起回流\n// console.log(div.offsetLeft);\n// var wid = div.offsetWidth\n// setInterval(()=>{\n//     wid += 1;\n//     div.style.width = wid + 'px';\n// },100)\n// 4.文档碎片（内存中的一个变量）\n\n\n\n\n\n\n\n"],"sourceRoot":""}